name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop, staging ]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Lint Check
        run: |
          npm run lint:frontend
          npm run lint:backend

      - name: Type Check
        run: |
          cd frontend && npm run type-check
          cd ../backend && npm run type-check

      - name: Unit Tests
        run: |
          cd backend && npm test
          cd ../frontend && npm test -- --watchAll=false

  code-coverage:
    name: Code Coverage Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Run tests with coverage
        run: |
          cd backend && npm test -- --coverage
          cd ../frontend && npm test -- --coverage --watchAll=false

      - name: Check coverage thresholds
        run: |
          bash -c '[[ $(jq .total.lines.pct backend/coverage/coverage-summary.json) -ge 80 ]]'
          bash -c '[[ $(jq .total.lines.pct frontend/coverage/coverage-summary.json) -ge 80 ]]'

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MERN-Stack'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired

  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR Size
        uses: matchai/check-pr-size-action@master
        with:
          max_files: 20
          max_lines: 800

  quality-gate:
    name: Quality Gate
    needs: [pr-validation, code-coverage, security-scan, size-check]
    runs-on: ubuntu-latest
    steps:
      - name: Quality Gate Check
        run: |
          echo "All quality checks passed successfully!" 