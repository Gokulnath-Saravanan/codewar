name: Security Scanning

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggers

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Run npm audit
        run: |
          npm audit
          cd frontend && npm audit
          cd ../backend && npm audit

      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --severity-threshold=medium

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MERN-Stack'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired
            --enableExperimental

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript
          queries: security-extended,security-and-quality

      - name: Upload security scan results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            dependency-check-report.html
            trivy-results.sarif
            snyk-results.json

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker images
        run: |
          docker build -t codewar-backend:${{ github.sha }} ./backend
          docker build -t codewar-frontend:${{ github.sha }} ./frontend

      - name: Run Trivy container scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'codewar-backend:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-backend.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Scan frontend container
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'codewar-frontend:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-frontend.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload container scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results-*.sarif

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  security-report:
    name: Security Report Generation
    needs: [security-scan, container-scan, secret-scanning]
    runs-on: ubuntu-latest
    steps:
      - name: Download scan results
        uses: actions/download-artifact@v3
        with:
          name: security-scan-results

      - name: Generate Security Report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "## Scan Results" >> security-report.md
          echo "* Dependencies scanned with OWASP Dependency Check" >> security-report.md
          echo "* Container images scanned with Trivy" >> security-report.md
          echo "* Code scanned with Snyk and CodeQL" >> security-report.md
          echo "* Secrets scanned with TruffleHog and GitGuardian" >> security-report.md

      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Vulnerabilities Detected',
              body: 'Security scanning has detected vulnerabilities. Please check the security report.',
              labels: ['security', 'high-priority']
            }) 